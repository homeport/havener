# You can initialize minikube "minikube start --cpus 4 --disk-size 100g --memory 8192"
# Make sure helm is up and running, by doing a "helm init --upgrade --force-upgrade"
# The 192.168.99.100 comes from doing a $(minikube ip) from the cmd line
name: minikube
releases:
- name: uaa
  namespace: uaa
  version: 0
  location: helm/uaa-opensuse@https://github.com/SUSE/scf/releases/download/2.13.3/scf-opensuse-2.13.3+cf2.7.0.0.gf95d9aed.zip
  overrides:
    secrets:
      UAA_ADMIN_CLIENT_SECRET: foobar
    env:
      DOMAIN: (( shell minikube ip )).xip.io
    image:
      pullPolicy: "Always"
    kube:
      hostpath_available: true
      external_ips:
      - (( shell dig +short $(minikube ip).xip.io ))
      storage_class:
        persistent: "standard"
- name: cf
  namespace: cf
  version: 0
  location: helm/cf-opensuse@https://github.com/SUSE/scf/releases/download/2.13.3/scf-opensuse-2.13.3+cf2.7.0.0.gf95d9aed.zip
  overrides:
    secrets:
      CLUSTER_ADMIN_PASSWORD: changeme
      UAA_ADMIN_CLIENT_SECRET: foobar
      UAA_CA_CERT: (( shell kubectl --namespace uaa get pods --output json | jq --raw-output ".items[].spec.containers[] | select(.name == \"uaa\") | .env[] | select(.name == \"INTERNAL_CA_CERT\") | [ .valueFrom.secretKeyRef.name, .valueFrom.secretKeyRef.key ] | @tsv" | while read -r SECRET_NAME SECRET_KEY; do kubectl --namespace uaa get secret "${SECRET_NAME}" --output json | jq --raw-output ".data[\"${SECRET_KEY}\"]" | base64 --decode; done ))
    env:
      DOMAIN: (( shell minikube ip )).xip.io
      TCP_DOMAIN: tcp.(( shell minikube ip )).xip.io
      UAA_HOST: uaa.(( shell minikube ip )).xip.io
      UAA_PORT: 2793
      INSECURE_DOCKER_REGISTRIES: "\"insecure-registry.(( shell minikube ip )).xip.io:20005\""
      GARDEN_APPARMOR_PROFILE: ""
    image:
      pullPolicy: "Always"
    kube:
      hostpath_available: true
      external_ips:
      - 192.0.2.42
      - (( shell dig +short $(minikube ip).xip.io ))
      storage_class:
        persistent: "standard"
